name: Daily integration

on:
  schedule:
    - cron:  '37 13 * * *'
  workflow_dispatch:

env:
  #TARGETS_PRE: all-sage-local
  #TARGETS: build doc-html doc-pdf
  TARGETS_PRE: config.status
  TARGETS: config.status
  TARGETS_OPTIONAL: ptest
  TOX_ENV: docker-ubuntu-focal-recommended
  EXTRA_SAGE_PACKAGES: git
  # Use buildkit for advanced caching features. However, this means that we
  # do not get a Docker image of a failed baseline build.
  # https://stackoverflow.com/questions/66186620/get-container-id-from-docker-buildkit-for-interactive-debugging
  DOCKER_BUILDKIT: 1
  # https://docs.docker.com/engine/reference/commandline/build/#specifying-external-cache-sources
  BUILDKIT_INLINE_CACHE: 1

defaults:
  run:
    working-directory: ./sage

jobs:
  baseline_build:
    runs-on: ubuntu-latest
    env:
      DOCKER_TARGETS: configured with-targets
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1000
          path: ./sage
      - name: Fetch develop and tags from sagetrac-mirror and trac.sagemath.org
        run: |
          git remote add trac https://github.com/sagemath/sagetrac-mirror.git
          git fetch trac develop --tags
          git remote add orig_trac git://trac.sagemath.org/sage.git
          git fetch orig_trac develop --tags
      - name: free disk space
        run: |
          df -h
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt-get clean
          docker rmi $(docker image ls -aq)
          echo "Largest packages:"
          dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 50
          sudo apt-get --fix-broken --yes remove $(dpkg-query -f '${Package}\n' -W | grep -E '^(ghc-|google-cloud-sdk|google-chrome|firefox|mysql-server|dotnet-sdk|hhvm|mono)') || echo "(error ignored)"
          df -h
      - name: Install test prerequisites
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install tox
          sudo apt-get clean
          df -h
      - name: Try to login to docker.pkg.github.com
        # https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable
        run: |
            TOKEN="${{ secrets.DOCKER_PKG_GITHUB_TOKEN }}"
            if [ -z "$TOKEN" ]; then
              TOKEN="${{ secrets.GITHUB_TOKEN }}"
            fi
            if echo "$TOKEN" | docker login ghcr.io -u ${{ github.actor }} --password-stdin; then
              echo "DOCKER_PUSH_REPOSITORY=ghcr.io/${{ github.repository }}/" >> $GITHUB_ENV
              echo "DOCKER_CONFIG_FILE=$HOME/.docker/config.json" >> $GITHUB_ENV
            fi
      - name: Build integration baseline
        run: |
          EXTRA_DOCKER_BUILD_ARGS="--cache-from=${DOCKER_PUSH_REPOSITORY}sage-$TOX_ENV-with-targets --build-arg USE_MAKEFLAGS=\"-k V=0 SAGE_NUM_THREADS=3 SAGE_DOCTEST_RANDOM_SEED=0\"" tox -e $TOX_ENV -- $TARGETS

  integration:
    runs-on: ubuntu-latest
    needs: [baseline_build]
    env:
      # In addition to the following packages, also "with-targets-optional-repo"
      # is pushed to GitHub packages.
      DOCKER_TARGETS: configured with-targets with-targets-optional
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1000
          path: ./sage
      - name: Fetch develop and tags from sagetrac-mirror and trac.sagemath.org
        run: |
          git remote add trac https://github.com/sagemath/sagetrac-mirror.git
          git fetch trac develop --tags
          git remote add orig_trac git://trac.sagemath.org/sage.git
          git fetch orig_trac develop --tags
      - name: Check out git-trac-command
        uses: actions/checkout@v2
        with:
          repository: mkoeppe/git-trac-command
          path: ./git-trac-command
          ref: releasemgr_patchbot_status
      - name: Install git-trac-command
        run: |
          python3 -m pip install --user $GITHUB_WORKSPACE/git-trac-command[releasemgr]
      - name: Merge Trac tickets
        run: |
          git config user.email "release@sagemath.org"
          git config user.name "Release Manager GH Actions workflow"
          INTEGRATION_BRANCH=${GITHUB_REF_NAME}+integration-$(date '+%Y-%m-%d')
          git branch -f $INTEGRATION_BRANCH
          git checkout $INTEGRATION_BRANCH
          git tag -f $INTEGRATION_BRANCH-baseline
          git tag -f integration-baseline
          PATH="$GITHUB_WORKSPACE/git-trac-command:$PATH" git releasemgr --trac-context="(from $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID)" merge-all --milestone=current
          git tag -f integration-head
      - name: free disk space
        run: |
          df -h
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt-get clean
          docker rmi $(docker image ls -aq)
          echo "Largest packages:"
          dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 50
          sudo apt-get --fix-broken --yes remove $(dpkg-query -f '${Package}\n' -W | grep -E '^(ghc-|google-cloud-sdk|google-chrome|firefox|mysql-server|dotnet-sdk|hhvm|mono)') || echo "(error ignored)"
          df -h
      - name: Install test prerequisites
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install tox
          sudo apt-get clean
          df -h
      - name: Try to login to docker.pkg.github.com
        # https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable
        run: |
            TOKEN="${{ secrets.DOCKER_PKG_GITHUB_TOKEN }}"
            if [ -z "$TOKEN" ]; then
              TOKEN="${{ secrets.GITHUB_TOKEN }}"
            fi
            if echo "$TOKEN" | docker login ghcr.io -u ${{ github.actor }} --password-stdin; then
              echo "DOCKER_PUSH_REPOSITORY=ghcr.io/${{ github.repository }}/" >> $GITHUB_ENV
              echo "DOCKER_CONFIG_FILE=$HOME/.docker/config.json" >> $GITHUB_ENV
            fi
      - name: Test integration baseline
        run: |
          git checkout integration-baseline
          EXTRA_DOCKER_BUILD_ARGS="--cache-from=${DOCKER_PUSH_REPOSITORY}sage-$TOX_ENV-with-targets --build-arg USE_MAKEFLAGS=\"-k V=0 SAGE_NUM_THREADS=3 SAGE_DOCTEST_RANDOM_SEED=0\"" tox -e $TOX_ENV -- $TARGETS
      - name: Add repository to Docker image
        run: |
          cat > Dockerfile <<EOF
          ARG BASE_IMAGE
          FROM \${BASE_IMAGE}
          ADD .git .git
          RUN git reset --hard
          EOF
          BASE_IMAGE=$(tail -n 1 .tox/$TOX_ENV/Dockertags)
          docker build --build-arg BASE_IMAGE=${BASE_IMAGE} . --tag ${BASE_IMAGE}-repo
          docker push ${BASE_IMAGE}-repo
      - name: Build and test integration head
        run: |
          docker run ${BASE_IMAGE}-repo bash -c "git checkout integration-head && make -k V=0 SAGE_NUM_THREADS=3 SAGE_DOCTEST_RANDOM_SEED=0 PTESTALL=\"./sage -t -p --all --baseline-stats-path=$HOME/.sage/timings2.json\" $TARGETS"
